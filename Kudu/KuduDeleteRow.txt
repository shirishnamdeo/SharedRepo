https://docs.cloudera.com/documentation/enterprise/5-10-x/topics/impala_delete.html
https://impala.apache.org/docs/build/html/topics/impala_delete.html

The DELETE statement only works in Impala when the target table is in Kudu.

------------------------------------------------------------------------------------------------------------------------

SYNTAX:

DELETE [FROM] [database_name.]table_name [ WHERE where_conditions ]

DELETE table_ref FROM [joined_table_refs] [ WHERE where_conditions ]


------------------------------------------------------------------------------------------------------------------------

NOTE:

------------------------------------------------------------------------------------------------------------------------

-- Deletes all rows. The FROM keyword is optional.
DELETE FROM kudu_table;
DELETE kudu_table;


-- Deletes 0, 1, or more rows.
-- If c1 is a single-column primary key, the statement could only delete 0 or 1 rows: Are only primary key can be used in WHERE condition to identify data?? NO.
DELETE FROM kudu_table WHERE c1 = 100;
DELETE FROM kudu_table WHERE id < 3;
DELETE FROM kudu_table WHERE (c1 > c2 OR c3 IN ('hello','world')) AND c4 IS NOT NULL;
DELETE FROM kudu_table WHERE (c1 IN (1,2,3) AND c2 > c3) OR c4 IS NOT NULL;
DELETE FROM kudu_table WHERE year = 2016 AND month IN (11,12) AND day > 15;

WHERE condition with a subquery.
DELETE FROM t1 WHERE c5 IN (SELECT DISTINCT other_col FROM other_table);

Does not delete any rows, because the WHERE condition is always false.
DELETE FROM kudu_table WHERE 1 = 0;



The following examples show how to delete rows that are part of the result set from a join (Essentially, whatever can be SELECTed can be DELETed)

Remove _all_ rows from t1 that have a matching X value in t2.
DELETE t1 FROM t1 JOIN t2 ON t1.x = t2.x;

Remove _some_ rows from t1 that have a matching X value in t2.
DELETE t1 FROM t1 JOIN t2 ON t1.x = t2.x WHERE t1.y = FALSE and t2.z > 100;

Delete from a Kudu table based on a join with a non-Kudu table.
DELETE t1 FROM kudu_table t1 JOIN non_kudu_table t2 ON t1.x = t2.x;

The tables can be joined in any order as long as the Kudu table is specified as the deletion target.
DELETE t2 FROM non_kudu_table t1 JOIN kudu_table t2 ON t1.x = t2.x;

------------------------------------------------------------------------------------------------------------------------

DELETE FROM <table-name> WHERE feed_id='' AND cob_date='' AND as_of_date='' ;
--This works even if the table is not partitioned on above attribites 

------------------------------------------------------------------------------------------------------------------------